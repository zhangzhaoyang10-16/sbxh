<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>vue组件 使用Vue.component全局注册组件</title>
  </head>
  <body></body>
  <script>
    // 1.通过 components 注册的是私有子组件
    // 例如：
    // 在组件A 的 components 节点下，注册了 组件F。
    // 则组件F只能用在组件A中，不能被用在组件B中

    // 思考两个问题：
    // 1.1 为什么组件 F 不能用在组件 B 中
    // 因为在 B 中没有注册 组件 F
    // 1.2 怎样才能在组件 B 中使用 F
    // 在组件 B 中也注册一次 F

    // 演示：   --> Count.vue
    // 安装插件 vetur 和 vue3 snippets

    // 1.3 按照组件三个步骤我们完成了在 组件Left 中使用 组件 Count ,那么我 组件Right也要使用是不是还需要重复写一次，如果有很多个，我们是不是需要重新写很多次相同的代码

    // 2. 注册全局组件
    // 注册全局组件有什么好处
    // 是不是我只需要注册一次，每一个组件都可以访问到，

    // 在vue 项目的 main.js 入口文件中，通过 Vue.component()方法，可以注册全局组件
    // 示例：
    import Count from "./components/Count.vue";
                
    Vue.component("MyCount", Count);
    // 这里有两个参数：
    // 参数1：字符串格式，表示组件的"注册名称"
    // 参数2：需要被全局注册的那个组件
    // 建议：注册组件的时候首字母大写

    // 现在Count组件是一个全局注册组件，那在 App组件里能不能使用，在Left组件、Right组件能不能使用

    // 那Right组件里是不是也会使用了

    // 3.auto close tag 自动闭合标签的插件

    // 4. 组件的props 为Count组件声明props自定义属性
    // 刚才我们封装了一个Count组件，并且做了一个全局注册，注册之后我们在任何组件下都可以使用
    // 问题：现在我们想在 Count组件实现一个点击按钮 +1 的一个效果   --> Count.vue

    // props 是组件的自定义属性，在封装通用组件的时候，合理地使用 props可以极大的提高组件的复用性
    // 现在咱们是不是就遇到了复用性了，就可以使用 props
    // 语法格式：
    export default {
      // 组件的自定义属性
      props: ["自定义属性A", "自定义属性B", "...."],

      // 组件私有数据
      data() {
        return {};
      },
    };
    // 和data 等节点平级，单独声明一个节点，值是一个数组，在数组里面可以自定义任何属性

    // 现在我们是谁用 count 谁就提供一个初始值，我们看怎么操作  --> Count.vue

    // 5. 结合v-bind 使用自定义属性
    // Left和Right组件同时都用到了 count ，但是每一个组件希望赋的初始值不一样，那有一种方式可以允许用户在使用 Count 组件的时候自定义一个初始值就是 props属性，这里两个角色大家要分清楚，一个是组件的封装者，一个是组件的使用者，谁是我们的封装者，是不是 Count组件是封装者，谁是使用者，是不是每一个使用 Count组件的都是使用者

    // 那么现在 init 给我们传的值是数字还是字符串，是不是一个字符串，怎么才能传一个数字呢，

    // 通过v-bind

    // 6. props 是只读的   -->
    // 组件中接收到init这个属性值以后，我们是不是也把init当做一个普通的数据放到页面上的模板中去使用了，所以要记住,props 的数据也可以像 data 数据一样去渲染使用

    // 现在我们在Count 组件中接收到了 init初始值并且渲染到了页面，那接下来当我们点击 button 按钮的时候让谁 +1  是不是 init自增

    //  这种写法能改是吧，但是终端会报错，这种写法 vue 是强烈不推荐的
    // Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders
    // 这句话是什么意思呢，就是说不能直接修改 props 的值，因为这个值将来可能会被覆盖

    // 那我们是不是就可以说 props 是只读的

    // 总结： vue 规定：组件中封装的自定义属性是只读的，程序员不能直接修改 props 的值，否则会直接报错

    // 需求：现在我想要点击按钮改变这个 init 的值，但是 init 是只能读，不能改的，怎么做？

    // 这里我们是不是还有一个count 值是一个可读可改的值，我们是不是只需要把这个初始值 init 存进 count 里面就可以了 --> Count.vue
  </script>
</html>
